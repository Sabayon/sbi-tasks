{{ $target_repo := .TargetRepo }}{{ $target_repo_prefix := .TargetPrefixRepo }}
{{ $target_repo_limbo := .TargetLimboRepo }}
{{ $keys := getKeys .stagings | sort }}
{{ $namespace_prefix := printf "%s%s" $target_repo "-" }}
{{ $staging_namespaces := joinWithPrefix $keys "," $namespace_prefix }}
{{ $bfiles_prefix := printf "%s%s" $target_repo_prefix "-build-" }}
{{ $pkglist_bfiles := joinWithPrefixAndPostfix $keys " " $bfiles_prefix ".yml" }}
{{ $injector_sources := printf "%s,%s" $target_repo_limbo $staging_namespaces }}
{{ $keys := join $keys " " }}
script:
  - source /etc/profile
  - wget https://raw.githubusercontent.com/Sabayon/sabayon-sark/develop/sark-functions.sh -O /sbin/sark-functions.sh
  - chmod 755 /sbin/sark-functions.sh
  - cp -rfv /sbin/sark-functions.sh /etc/sark-functions
  - chmod 755 /etc/sark-functions
  - eselect python set python3.6
  # Force py3.6 on eit
  - sed -e 's:python2.7:python:g' -i /usr/bin/eit
  # Create mask file of upstream packages
  - source /sbin/sark-functions.sh
  # Required for update profile confs
  - layman -s sabayon-distro
  - sabayon_mask_upstream_pkgs
  - enman add https://dispatcher.sabayon.org/sbi/namespace/{{ $target_repo_limbo }}/{{ $target_repo }}
  - equo up && equo upgrade
  - wget https://raw.githubusercontent.com/Sabayon/devkit/develop/builder -O /usr/sbin/builder
  - wget https://raw.githubusercontent.com/Sabayon/devkit/develop/dynlink-scanner -O /usr/bin/dynlink-scanner
  - wget https://raw.githubusercontent.com/Sabayon/sabayon-sark/develop/sark-localbuild -O /usr/bin/sark-localbuild
  - wget https://raw.githubusercontent.com/Sabayon/sabayon-sark/develop/sark-localcreaterepo -O /usr/bin/sark-localcreaterepo
  - wget https://raw.githubusercontent.com/Sabayon/sabayon-sark/develop/sark-localinjector -O /usr/bin/sark-localinjector
  - wget https://dispatcher.sabayon.org/sbi/namespace/pkgs-checker-cross-bin/pkgs-checker-latest-linux-arm -O /usr/bin/pkgs-checker
  - chmod a+x /usr/sbin/builder
  - chmod a+x /usr/bin/sark-localcreaterepo
  - chmod a+x /usr/bin/sark-localbuild
  - chmod a+x /usr/bin/sark-localinjector
  - chmod a+x /usr/bin/pkgs-checker
  - chmod a+x /usr/bin/dynlink-scanner
  - sed -i /usr/lib64/python2.7/site-packages/yaml/__init__.py -e "s:load_warning('load'):# load_warning('load'):g" -e "s:load_warning('load_all'):# load_warning('load_all'):g" -e "s:raise RuntimeError:# raise RuntimeError:g"
  - sark-localinjector
  - eval 'rm artifacts/build_*.log || true'
environment:
  - SHELL=/bin/bash
  - SABAYON_ARCH=arm
  - ETP_NONINTERACTIVE=1
  - REPOSITORY_NAME={{ .TargetRepo }}
  - REPO_CLEAN_EXPIRE=1
  - REPO_CLEAN_EXPIRE_DAYS={{ .ExpireDays }}
  - SKIP_COMMIT=1
  # Pull is required for remove packages from repository. (SKIP_PULL=0)
  - SKIP_PULL=0
  - "SAB_STAGING_BUILD_RESOURCES={{ $pkglist_bfiles }}"
{{ if .SkipInject }}
  - SKIP_INJECT=1
{{ else }}
  - SKIP_INJECT=0
{{ end }}
  - SAB_PORTDIR=/etc/portage
  - "ACCEPT_LICENSE=*"
  - "PORTAGE_GIT_URL=https://github.com/Sabayon/gentoo-mirror"
  - "PORTAGE_GIT_BRANCH=arm"
  - "REPOSITORY_DESCRIPTION={{ .TargetRepoName }} ARM Sabayon Repository"
  - "SAB_STAGING_DIRS={{ $keys }}"
  - REPO_BINHOST_CLEAN=1
  - SAB_BUILDFILE={{ .TargetPrefixRepo }}-build-inject.yml
  # Skip errors on process existing broken tarballs
  #- "PKGS_CHECKER_OPTS=-L ERROR -c -v --ignore-errors"
  # Disable temporary concurrency for pthread_create failed: Resource temporarily unavailable
  - "PKGS_CHECKER_OPTS=-L ERROR -v --ignore-errors"
  - "PKGS_CHECKER_MAXCONCURRENCY=3"
  # Override pkgs-checker filter options
  # - "PKGS_CHECKER_FILTER_OPTS=-L INFO -v"
{{ if .FilterBinHost }}
  # Override pkgs-checker filter options for final artefacts binhost directory.
  # - "PKGS_CHECKER_FILTER_ARTEFACTS_OPTS=-v -L INFO"
{{ end }}
{{ if .ResetRevision }}
  # For bootstrap repo reset packages revision to 0
  - "EIT_INJECT_OPTS=--reset-revision"
{{ end }}
  - "EIT_REMOVE_OPTS=--quick --nodeps"
{{ if .PkgsToRemove }}
  # Force remove of packages from repository before injection
  - "TOREMOVE_BEFORE={{ .PkgsToRemove }}"
  # Disable hashing of packages because we are on clean task.
  - "CHECK_BUILD_DIFFS=0"
{{ end }}
  # Force remove of packages from repository after injection
  # - "TOREMOVE=app/foo"
{{ if .LxdType }}
image: sabayon/builder-arm
type: lxd
{{ else }}
image: geaaru/sabayon-builder-arm
type: docker
{{ end }}
artefact_path: artifacts
queue: {{ if .ArmQueue }}{{ .ArmQueue }}{{ else }}arm_lxd{{ end }}
name: "ARM {{ .TargetRepoName }} Repo (injector)"
source: https://github.com/Sabayon/sbi-tasks
directory: "/next/arm/{{ .TargetPrefixRepo }}"
{{ if .PkgsToRemove }}
namespace: "{{ $target_repo_limbo }}"
{{ else }}
namespace: "{{ $injector_sources }}"
{{ end }}
tag_namespace: {{ $target_repo_limbo }}
